using MySql.Data.MySqlClient;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Authorization
{
    public partial class Authorization : Form
    {
        public Authorization()
        {
            InitializeComponent();
        }

        private void BTN_ADD_USER_Click(object sender, EventArgs e)
        {
            Global.NewUser = new List<string>()
            {
                TB_User_Name.Text,
                TB_User_Surname.Text,
                TB_User_Password.Text,
                TEXT_GENERATE_CODE.Text
            };
            DataBase.AddUser(Global.NewUser);


            if (Global.USER_ADDED)
            {
                DialogResult dialog = MessageBox.Show("User has been added", "Confirmation", MessageBoxButtons.OK, MessageBoxIcon.Information);
                if (dialog == DialogResult.OK)
                {
                    TB_User_Name.Text = "";
                    TB_User_Surname.Text = "";
                    TB_User_Password.Text = "";
                    TEXT_GENERATE_CODE.Text = "";
                }
            }
            else MessageBox.Show("Error", "Confirmation", MessageBoxButtons.OK, MessageBoxIcon.Information);
        }
        private void BTN_Generate_CODE_Click(object sender, EventArgs e)
        {
            string smallLetters = "abcdefghijklmnopqrstuvwxyz";
            string bigLetters = smallLetters.ToUpper();
            string numericLetters = "0123456789";
            string codeMarks = bigLetters + smallLetters + numericLetters;
            string generatedCode = "";

            Random random = new Random();

            for (int i = 0; i < 4; i++)
            {
                generatedCode += codeMarks[random.Next(0, codeMarks.Length - 1)];
            }
            string currentTime = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
            DateTime add = Convert.ToDateTime(currentTime).AddMinutes(10);
            string incrementedTime = add.ToString("yyyy-MM-dd HH:mm:ss");


            //DateTime first = Convert.ToDateTime(currentTime);
            //DateTime sec = Convert.ToDateTime(incrementedTime);
            //TimeSpan res = sec - first;
            //string residence_time = res.ToString();

            Global.GENERATED_TIME = currentTime;
            Global.EXPIRE_TIME = incrementedTime;
            //Global.RESIDENCE_TIME = residence_time;

            TEXT_GENERATE_CODE.Text = generatedCode;
        }

        private void BTN_DELETE_USER_Click(object sender, EventArgs e)
        {
            Global.DeleteUser = new List<string>()
            {
                TEXT_UID_DELETE.Text,
                TEXT_NAME_DELETE.Text,
                TEXT_SURNAME_DELETE.Text
            };
            DataBase.DeleteUser(Global.DeleteUser);


            if (Global.USER_DELETED)
            {
                DialogResult dialog = MessageBox.Show("User has been deleted", "Confirmation", MessageBoxButtons.OK, MessageBoxIcon.Information);
                if (dialog == DialogResult.OK)
                {
                    TEXT_UID_DELETE.Text = "";
                    TEXT_NAME_DELETE.Text = "";
                    TEXT_SURNAME_DELETE.Text = "";
                }
            }
            else MessageBox.Show("Error", "Confirmation", MessageBoxButtons.OK, MessageBoxIcon.Information);
        }

        private void BTN_CHECK_PERSONS_Click(object sender, EventArgs e)
        {
            Thread time = new Thread(check_users_time);
            Thread authorized = new Thread(check_users_authorized);

            time.Start();
            authorized.Start();
        }
        private void check_users_time()
        {
            MySqlConnection connection = new MySqlConnection(DataBase.connectionString);
            try
            {
                connection.Open();
                MySqlCommand persons_time = new MySqlCommand("select users.user_name,users.user_surname, " +
                                                      "usertime.time_in,usertime.time_out,usertime.residence_time_in_minutes " +
                                                      "from users,usertime where users.user_id = usertime.user_id", connection);
                MySqlDataAdapter adapter = new MySqlDataAdapter(persons_time);
                DataTable table = new DataTable();
                adapter.Fill(table);
                dgvPERSONS_TIME.DataSource = table;
            }
            catch (MySqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            finally
            {
                connection.Close();
            }
        }
        private void check_users_authorized()
        {
            MySqlConnection connection = new MySqlConnection(DataBase.connectionString);
            try
            {
                connection.Open();
                MySqlCommand persons_time = new MySqlCommand("select * from users", connection);
                MySqlDataAdapter adapter = new MySqlDataAdapter(persons_time);
                DataTable table = new DataTable();
                adapter.Fill(table);
                dgvPERSONS.DataSource = table;
            }
            catch (MySqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            finally
            {
                connection.Close();
            }
        }
    }
}
